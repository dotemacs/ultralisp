* How to start server and worker outside Docker

First, start Postgres, Gearman and Worker in the Docker Compose:

lake

Then open Emacs:

qlot exec ros emacs


Open SLY, and do:

#+begin_src lisp

(ql:quickload :ultralisp/server)

(ultralisp/server:start-outside-docker)

#+end_src

This way you'll have two HTTP servers:

- One started on 8080 port and running inside Docker.
- Second on 8081 port and running outside.

Open the second REPL and load ~:ultralisp/worker~.

Eval ~(ultralisp/worker:process-jobs)~ there:

#+begin_src lisp

(ql:quickload :ultralisp/worker)

(ultralisp/worker:start-outside-docker)


#+end_src



* How to run a check for some project

#+BEGIN_SRC lisp

(log4cl-json:setup :level :info)
(ultralisp/cron:stop)
(ultralisp/db:connect-toplevel)

(ultralisp/rpc/core:submit-task 'ultralisp/pipeline/checking:perform
                                (ultralisp/models/check:make-checks
                                 (ultralisp/models/project:get-github-project "guicho271828" "type-i")
                                 :manual)
                                :force t)
#+END_SRC

* How to update LispWorks license

It is stored in two places:

- GitHub secrets (used to build an image with lw-worker)
- Ansible secrets .ansible/playbooks/group_vars/ultralisp/vault (installed
  into a docker container and used to apply license on the host after
  deployment. On the first container run file with license is applied
  and removed from the container.)


GitHub secret is updated in settings of
https://github.com/ultralisp/ultralisp organization. To update Ansible
secrets run the following command:

#+begin_src bash

pyenv exec ansible-vault edit .ansible/playbooks/group_vars/ultralisp/vault

#+end_src
