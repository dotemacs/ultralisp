version: '3.7'
services:
  app:
    container_name: ultralisp_app
    build:
      context: .
      target: sbcl-app
    restart: always
    # Probably, these aren't needed
    # stdin_open: true
    # tty: true
    ports:
      - "127.0.0.1:8080:80"
      - "127.0.0.1:14005:4005"
    volumes:
      - ./ultralisp.asd:/app/ultralisp.asd
      - ./ultralisp-deps.asd:/app/ultralisp-deps.asd
      - ./.qlot/local-projects:/app/.qlot/local-projects
      - ./src/:/app/src/
      - ./t/:/app/t/
      - ./db/:/app/db/
      - ./roswell/:/app/roswell/
      - ./logs/:/app/logs/
      - ./new-libs/:/app/new-libs/
      - ./build/:/app/build/
    environment:
      DEBUG: 1
      POSTGRES_HOST: postgres
      POSTGRES_USER: ultralisp
      POSTGRES_PASSWORD: ultralisp
      POSTGRES_DBNAME: ultralisp
      POSTGRES_RO_USER: ultralisp_ro
      POSTGRES_RO_PASSWORD: ultralisp_ro
      ELASTIC_SEARCH_HOST: elastic
      GEARMAN_SERVER: gearman:4730
      # These tokens are from the development app and
      # we don't need to keep them in secret
      GITHUB_CLIENT_ID: 0bc769474b14267aac28
      GITHUB_SECRET: 3f46156c6bd57f4c233db9449ed556b6e545315a
      BASE_URL: http://localhost:8080/dist/
      PROJECTS_DIR: /app/build/sources/
      DIST_DIR: /app/build/dist/
      # For development we most probably don't want to run
      # cron jobs. To run cron jobs manually, do:
      # (ultralisp/cron:setup :force t)
      CRON_DISABLED: "yes"
      SLYNK_PORT: 4005
      SLYNK_INTERFACE: 0.0.0.0

  gearman:
    container_name: ultralisp_gearman
    # https://hub.docker.com/r/artefactual/gearmand/dockerfile
    # https://github.com/artefactual-labs/docker-gearmand
    image: "artefactual/gearmand:1.1.19.1-alpine"
    ports:
      - "127.0.0.1:4730:4730"

  worker:
    container_name: ultralisp_worker
    build:
      context: .
      target: sbcl-worker
    restart: always
    ports:
      - "127.0.0.1:14006:4005"
    volumes:
      - ./ultralisp.asd:/app/ultralisp.asd
      - ./ultralisp-deps.asd:/app/ultralisp-deps.asd
      - ./quicklisp/local-projects:/app/quicklisp/local-projects
      - ./src/:/app/src/
      - ./roswell/:/app/roswell/
      - ./logs/:/app/logs/
      - ./new-libs/:/app/new-libs/
      - ./build/:/app/build/
    environment:
      DEBUG: 1
      MODE: worker
      ELASTIC_SEARCH_HOST: elastic
      GEARMAN_SERVER: gearman:4730
      SLYNK_PORT: 4005
      SLYNK_INTERFACE: 0.0.0.0

  postgres:
    container_name: ultralisp_db
    image: "postgres:10"
    restart: always
    environment:
      POSTGRES_USER: ultralisp
      POSTGRES_PASS: ultralisp
    ports:
      - "127.0.0.1:5432:5432"
    volumes:
      - ./postgresql-data:/var/lib/postgresql/data
      - ./docker/initdb.d/:/docker-entrypoint-initdb.d/

  elastic:
    container_name: ultralisp_elastic
    image: "elasticsearch:7.3.2"
    restart: always
    environment:
      discovery.type: single-node
    ports:
      - "127.0.0.1:9200:9200"
      - "127.0.0.1:9300:9300"
    # volumes:
    #   - ./elastic-data:/usr/share/elasticsearch/data

  empty-postgres:
    container_name: ultralisp_empty_db
    image: "postgres:10"
    restart: always
    environment:
      POSTGRES_USER: ultralisp
      POSTGRES_PASS: ultralisp
    ports:
      - "127.0.0.1:5433:5432"
    volumes:
      - ./docker/initdb.d/:/docker-entrypoint-initdb.d/

  # Commands
  gen-deps-system:
    build: .
    volumes:
      - ./docker/entrypoint.sh:/app/docker/entrypoint.sh
      - ./ultralisp.asd:/app/ultralisp.asd
      - ./ultralisp-deps.asd:/app/ultralisp-deps.asd
      - ./src/:/app/src/
      - ./roswell/:/app/roswell/

    command: |
      bash -c " \
      qlot exec ros install 40ants/gen-deps-system && \
      qlot exec ros run --eval '(ql:quickload :ultralisp)' --eval '(uiop:quit)' && \
      qlot exec /root/.roswell/bin/gen-deps-system --except ultralisp app \ 
      "

  mito:
    build:
      context: .
      target: mito

    volumes:
      - ./docker/mito.sh:/app/docker/mito.sh
      - ./ultralisp.asd:/app/ultralisp.asd
      - ./ultralisp-deps.asd:/app/ultralisp-deps.asd
      - ./src/:/app/src/
      - ./db/:/app/db/
      - ./roswell/:/app/roswell/
      - ./quicklisp/local-projects:/app/quicklisp/local-projects

  db-ops:
    build:
      context: .
      target: db-ops

    volumes:
      - ./db/:/db/
      - ./docker/dev-entrypoint.sh:/entrypoint.sh
